"use strict";(self.webpackChunkmachine_learning=self.webpackChunkmachine_learning||[]).push([[448],{3748:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"random-forrest","title":"Random Forrest","description":"Random Forrest is an ensemble classifier (it can also be used as a regressor,","source":"@site/docs/random-forrest.md","sourceDirName":".","slug":"/random-forrest","permalink":"/machine-learning/random-forrest","draft":false,"unlisted":false,"editUrl":"https://github.com/pranabdas/machine-learning/blob/main/docs/random-forrest.md","tags":[],"version":"current","frontMatter":{"title":"Random Forrest"},"sidebar":"docs","previous":{"title":"Hierarchical Clustering","permalink":"/machine-learning/hierarchical-clustering"},"next":{"title":"Boosting","permalink":"/machine-learning/boosting"}}');var s=t(4848),i=t(8453);const a={title:"Random Forrest"},o=void 0,c={},l=[];function d(e){const n={p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Random Forrest is an ensemble classifier (it can also be used as a regressor,\ninstead of majority voting we consider the weighted average of each individual\ntree for the final outcome). It combines multiple decision tree classifiers to\nform a final single classifier. While decision trees are common and simple\nsupervised learning method, they have some drawbacks as well, such as bias and\noverfitting. Such drawbacks can be overcome by using multiple decision trees to\nform an ensemble in the random forest algorithm. They improve the predictions,\nparticularly when the individual trees are uncorrelated (random) with each\nother."}),"\n",(0,s.jsx)(n.p,{children:"Unlike a single decision tree, random forrest selects a subset of features as\nwell. This can reduce the risk of overfitting. Each individual tree predicts a\noutput class, and the class gets majority voting is the model's prediction.\nRandom forest algorithms have three main hyperparameters: node size, the number\nof trees, and the number of features sampled."})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(6540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);