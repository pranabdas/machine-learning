"use strict";(self.webpackChunkmachine_learning=self.webpackChunkmachine_learning||[]).push([[581],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return y}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=u(t),y=r,g=h["".concat(p,".").concat(y)]||h[y]||c[y]||o;return t?a.createElement(g,i(i({ref:n},s),{},{components:t})):a.createElement(g,i({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=h;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},1959:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=["components"],l={title:"Computing setup",keywords:["jupyter notebook","python data analysis"]},p=void 0,u={unversionedId:"setup",id:"setup",title:"Computing setup",description:"We will run our code in Jupyter notebook. We will use Python 3 programming",source:"@site/docs/setup.md",sourceDirName:".",slug:"/setup",permalink:"/machine-learning/setup",draft:!1,editUrl:"https://github.com/pranabdas/machine-learning/blob/main/docs/setup.md",tags:[],version:"current",frontMatter:{title:"Computing setup",keywords:["jupyter notebook","python data analysis"]},sidebar:"docs",previous:{title:"Introduction",permalink:"/machine-learning/"},next:{title:"Probability and Statistics",permalink:"/machine-learning/probability-statistics"}},s={},c=[{value:"Installing Python",id:"installing-python",level:3},{value:"Installing git",id:"installing-git",level:3},{value:"Setting up Jupyter",id:"setting-up-jupyter",level:3},{value:"Running python and jupyter in Docker container",id:"running-python-and-jupyter-in-docker-container",level:3}],h={toc:c};function y(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"We will run our code in Jupyter notebook. We will use Python 3 programming\nlanguage."),(0,o.kt)("h3",{id:"installing-python"},"Installing Python"),(0,o.kt)("p",null,"If you use macOS (Big Sur, 11), you should have already Python 3 installed. If\nyou use Ubuntu/ Debian, you can install by:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install python3 python3-pip\n")),(0,o.kt)("p",null,"You can check whether Python 3 is installed in your system or not by typing\nfollowing in a terminal:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python3 --version\n")),(0,o.kt)("p",null,"If python 3 is installed, it will print the version number, otherwise you will\nsee some sort of error."),(0,o.kt)("p",null,"If you use Windows, you can go to ",(0,o.kt)("a",{parentName:"p",href:"https://www.python.org"},"https://www.python.org"),", download and\ninstall latest version of Python 3."),(0,o.kt)("h3",{id:"installing-git"},"Installing git"),(0,o.kt)("p",null,"Git is preinstalled in macOS. On Ubuntu/Debian:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install git\n")),(0,o.kt)("p",null,"On Windows go to ",(0,o.kt)("a",{parentName:"p",href:"https://git-scm.com"},"https://git-scm.com"),", download and install git (optionally,\nyou can choose to install Git Bash, a UNIX like terminal for Windows)."),(0,o.kt)("p",null,"Once you have git, you can open a terminal (on Windows Command prompt, Git bash,\nor Powershell) and clone my repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/pranabdas/machine-learning\n")),(0,o.kt)("h3",{id:"setting-up-jupyter"},"Setting up Jupyter"),(0,o.kt)("p",null,"You can install Jupyter and other required python packages by going to my\nmachine-learning directory (that you have locally cloned) and issuing following\ncommand:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"pip install --upgrade -r requirements.txt\n")),(0,o.kt)("p",null,"Now we are ready to launch Jupyter notebook by typing ",(0,o.kt)("inlineCode",{parentName:"p"},"jupyter-lab")," in the\nterminal. Navigate to ",(0,o.kt)("inlineCode",{parentName:"p"},"notebooks")," folder and you can open my notebooks."),(0,o.kt)("h3",{id:"running-python-and-jupyter-in-docker-container"},"Running python and jupyter in Docker container"),(0,o.kt)("p",null,"If you prefer running python and jupyter notebook inside a ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com"},"Docker")," container, I have a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pranabdas/machine-learning/blob/master/Dockerfile"},"Dockerfile")," in the\nproject repository to build the container image. You can go through the\nDockerfile and adjust according to your needs. Build the image:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t jupyter .\n")),(0,o.kt)("p",null,"We can run the container in interactive mode with shared folder and port\nforwarding with the host:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run -ti -p 8888:8888 -v ${PWD}:/home jupyter bash\n")),(0,o.kt)("p",null,"Once you are inside the container, you can launch jupyter notebook by entering\n",(0,o.kt)("inlineCode",{parentName:"p"},"jupyter-lab")," and leave the container by typing ",(0,o.kt)("inlineCode",{parentName:"p"},"exit"),"."),(0,o.kt)("p",null,"In future, pull upstream changes when you have no local changes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git pull\n")),(0,o.kt)("p",null,"If you have local changes that you want to preserve:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git stash\ngit pull\ngit stash apply\n")),(0,o.kt)("p",null,"Pull the upstream changes and override local changes (be careful if you have\nimportant changes, in that case please make a new branch/commit/merge):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git fetch\ngit reset --hard origin/master\n")))}y.isMDXComponent=!0}}]);